type User @entity {
  id: ID!
  address: Bytes!
  deposited: Boolean!
  kyced: Boolean!
  loanFundings: [Funding!]!
  loanRequests: [Loan!]!
  referrals: [Referral!]
  totalBountyWithdrawn: BigInt!
  totalBountyToWithdraw: BigInt!
  totalReferralsCount: Int!
  withdrawalUnlocked: Boolean!
}

type Referral @entity {
  id: ID!
  referrer: User!
  referred: User!
}

type ReferralTracker @entity {
  id: ID!
  referrals: [Referral!]
  referralsCount: Int!
  referralsPendingToWithdraw: Int!
  referralsWithdrawn: Int!
  currentFunds: BigInt!
  totalFundsWithdrawn: BigInt!
  paused: Boolean!
}

type LoanDispatcher @entity {
  id: ID!
  address: Bytes!
  loans: [Loan!]
  loansCount: Int!
  minAmount: BigInt!
  maxAmount: BigInt!
  minInterestRate: BigInt!
  maxInterestRate: BigInt!
  operatorFee: BigInt!
}

type Loan @entity {
  id: ID!
  
  # loan status
  investors: [User!]!
  investorCount: Int!
  address: Bytes! # address
  dispatcherId: String!
  originator: Bytes! # address
  minAmount: BigInt! # uint256
  maxAmount: BigInt! # uint256
  maxInterestRate: BigInt! # uint256
  state: Int! #enum
  borrowerDebt: BigInt!
  loanFundsUnlocked: Boolean!
  operatorFee: BigInt!

  #Funding/Auction fase
  auctionStartBlock: BigInt! # uint256
  auctionEndBlock: BigInt! # uint256
  auctionBlockLength: BigInt!
  termEndTimestamp: BigInt!
  lastFundedBlock: BigInt
  auctionLastFundedBlock: BigInt #block where loan is fully funded
  principal: BigInt!
  minimumReached: Boolean!
  auctionFullyFunded: Boolean!
  auctionEnded: Boolean!
  auctionFailed: Boolean!
  interestRate: BigInt
  netBalance: BigInt

  #borrower withdraw
  operatorBalance: BigInt!
  operatorFeeWithdrawn: Boolean!
  operatorFeeAmount: BigInt
  loanWithdrawn: Boolean!
  loanRepaid: Boolean!
  loanRepaidTimestamp: BigInt
  loanWithdrawnAmount: BigInt!

  #Lender Withdraw fase
  refundsWithdrawnAmount: BigInt!
  loanFullyRefunded: Boolean!
  refundStarted: Boolean!
}

type Funding @entity {
  id: ID!
  loan: Loan!
  amount: BigInt!
  withdrawn: Boolean!
  amountWithdrawn: BigInt!
}

type Raise @entity {
  id: ID!
  feesToWithdraw: BigInt!
  feesWithdrawn: BigInt!
}