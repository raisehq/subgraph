type User @entity {
  id: ID!
  address: Bytes!
  deposited: Boolean!
  kyced: Boolean!
  loanFundings: [Funding!]!
  loanRequests: [Loan!]!
  referrals: [Referral!]
  totalBountyWithdrawn: BigInt!
  totalBountyToWithdraw: BigInt!
  totalReferralsCount: Int!
  withdrawalUnlocked: Boolean!
}

type Referral @entity {
  id: ID!
  referrer: User!
  referred: User!
}

type ReferralTracker @entity {
  id: ID!
  referrals: [Referral!]
  referralsCount: Int!
  referralsPendingToWithdraw: Int!
  referralsWithdrawn: Int!
  currentFunds: BigInt!
  totalFundsWithdrawn: BigInt!
  paused: Boolean!
}

type LoanDispatcher @entity {
  id: ID!
  address: Bytes!
  loans: [Loan!]
  loansCount: Int!
  minAmount: BigInt!
  maxAmount: BigInt!
  minInterestRate: BigInt!
  maxInterestRate: BigInt!
}

type Loan @entity {
  id: ID!
  investors: [User!]!
  investorCount: Int!
  # initial values set at loan created
  address: Bytes! # address
  dispatcherId: String!
  originator: Bytes! # address
  minAmount: BigInt! # uint256
  maxAmount: BigInt! # uint256
  
  auctionStartBlock: BigInt! # uint256
  auctionEndBlock: BigInt! # uint256
  auctionBlockLength: BigInt!
  termEndTimestamp: BigInt!

  # values that are modified through the loan's life
  lastFundedBlock: BigInt
  lastFundedDate: String
  #termStartTimestamp: BigInt
  auctionFundedBlock: BigInt #block where loan is fully funded
  fullyFundedDate: String

  auctionBalance: BigInt!
  loanWithdrawnAmount: BigInt
  borrowerDebt: BigInt
  
  maxInterestRate: BigInt! # uint256
  interestRate: BigInt

  minimumReached: Boolean!
  auctionEnded: Boolean! 
  
  loanWithdrawn: Boolean!
  loanRepaid: Boolean!
  loanRepaidTimestamp: BigInt

  state: Int! #enum
}

type Funding @entity {
  id: ID!
  loan: Loan!
  amount: BigInt!
  withdrawn: Boolean!
}
